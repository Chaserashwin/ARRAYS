Q:https://leetcode.com/problems/move-zeroes/
solution:
class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int n=nums.size();
        if(n==0||n==1)
            return ;
        int r=0,l=0;
        while(r<n)
        {
            if(nums[r]==0)
            r++;
            else
            {
                swap(nums[r],nums[l]);
                r++; l++;
            }
        }
    }
};

Q:https://leetcode.com/problems/best-time-to-buy-and-sell-stock/
solution:
class Solution {
public:
    int maxProfit(vector<int>& prices) {
        int n=prices.size();
        if(n==1) return 0;
        int l=0,r=0,max=0,maxi=0;
        while(r<n)
        {
            if(prices[l]<=prices[r]&&l<=r)
            {
                maxi=prices[r]-prices[l];
                if(maxi>max)
                    max=maxi;
                r++;
            }
            else
                l++;
        }
        return max;
    }
};
